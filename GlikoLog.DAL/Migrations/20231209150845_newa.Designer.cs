// <auto-generated />
using System;
using GlikoLog.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlikoLog.DAL.Migrations
{
    [DbContext(typeof(UygulamaDbContext))]
    [Migration("20231209150845_newa")]
    partial class newa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlikoLog.DAL.Entities.BesinDegeri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Kalori")
                        .HasColumnType("float");

                    b.Property<double?>("Karbonhidrat")
                        .HasColumnType("float");

                    b.Property<double?>("Protein")
                        .HasColumnType("float");

                    b.Property<double?>("Seker")
                        .HasColumnType("float");

                    b.Property<double?>("Yag")
                        .HasColumnType("float");

                    b.Property<int?>("YemekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BesinDegerleri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Egzersiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EgzersizSuresi")
                        .HasColumnType("int");

                    b.Property<DateTime>("EgzersizTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("EgzersizTuru")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Egzersizler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 9
                        },
                        new
                        {
                            Id = 2,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 10
                        },
                        new
                        {
                            Id = 3,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 7
                        },
                        new
                        {
                            Id = 4,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 12
                        },
                        new
                        {
                            Id = 5,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 8
                        },
                        new
                        {
                            Id = 6,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 4
                        },
                        new
                        {
                            Id = 7,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 5
                        },
                        new
                        {
                            Id = 8,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 12
                        },
                        new
                        {
                            Id = 9,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 3
                        },
                        new
                        {
                            Id = 10,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 5
                        },
                        new
                        {
                            Id = 11,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 15
                        },
                        new
                        {
                            Id = 12,
                            EgzersizTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EgzersizTuru = 6
                        });
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.IletisimBilgi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("IletisimBilgileri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Boy")
                        .HasColumnType("float");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("IletisimBilgiId")
                        .HasColumnType("int");

                    b.Property<double>("Kilo")
                        .HasColumnType("float");

                    b.Property<int>("KullaniciTuru")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Yas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IletisimBilgiId")
                        .IsUnique()
                        .HasFilter("[IletisimBilgiId] IS NOT NULL");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "admin",
                            Boy = 0.0,
                            Cinsiyet = 0,
                            Email = "admin@bilgeadamboost.com",
                            Kilo = 0.0,
                            KullaniciTuru = 0,
                            Sifre = "8C6976E5B5410415BDE908BD4DEE15DFB167A9C873FC4BB8A81F6F2AB448A918",
                            Soyad = "admin",
                            Yas = 0
                        });
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.KullaniciEgzersizler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("egzersizId")
                        .HasColumnType("int");

                    b.Property<int>("kullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("egzersizId");

                    b.HasIndex("kullaniciId");

                    b.ToTable("KullaniciEgzersizler");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.KullaniciYemekOgun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("OgunId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("YemekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OgunId");

                    b.HasIndex("YemekId");

                    b.ToTable("KullaniciYemekleri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Ogun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ogunler");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.SaglikBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IlacAdet")
                        .HasColumnType("int");

                    b.Property<bool?>("InsulinMi")
                        .HasColumnType("bit");

                    b.Property<double?>("KanSekeri")
                        .HasColumnType("float");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("İlacAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("SaglikBilgileri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.SuIcmeBilgisi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("MiktarMl")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("SuIcmeBilgileri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Yemek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BesinDegeriId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Gorsel")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("Porsiyon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BesinDegeriId")
                        .IsUnique()
                        .HasFilter("[BesinDegeriId] IS NOT NULL");

                    b.ToTable("Yemekler");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Kullanici", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.IletisimBilgi", "IletisimBilgisi")
                        .WithOne("Kullanici")
                        .HasForeignKey("GlikoLog.DAL.Entities.Kullanici", "IletisimBilgiId");

                    b.Navigation("IletisimBilgisi");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.KullaniciEgzersizler", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.Egzersiz", "Egzersiz")
                        .WithMany("KullaniciEgzersizler")
                        .HasForeignKey("egzersizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlikoLog.DAL.Entities.Kullanici", "kullanici")
                        .WithMany("KullaniciEgzersizler")
                        .HasForeignKey("kullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Egzersiz");

                    b.Navigation("kullanici");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.KullaniciYemekOgun", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciYemekleri")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlikoLog.DAL.Entities.Ogun", "Ogun")
                        .WithMany("KullaniciYemekleri")
                        .HasForeignKey("OgunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlikoLog.DAL.Entities.Yemek", "Yemek")
                        .WithMany("KullaniciYemekleri")
                        .HasForeignKey("YemekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Ogun");

                    b.Navigation("Yemek");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.SaglikBilgisi", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.Kullanici", "Kullanici")
                        .WithMany("SaglikBilgisi")
                        .HasForeignKey("KullaniciId");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.SuIcmeBilgisi", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.Kullanici", "Kullanici")
                        .WithMany("suIcmeBilgisi")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Yemek", b =>
                {
                    b.HasOne("GlikoLog.DAL.Entities.BesinDegeri", "BesinDegeri")
                        .WithOne("Yemek")
                        .HasForeignKey("GlikoLog.DAL.Entities.Yemek", "BesinDegeriId");

                    b.Navigation("BesinDegeri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.BesinDegeri", b =>
                {
                    b.Navigation("Yemek")
                        .IsRequired();
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Egzersiz", b =>
                {
                    b.Navigation("KullaniciEgzersizler");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.IletisimBilgi", b =>
                {
                    b.Navigation("Kullanici")
                        .IsRequired();
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciEgzersizler");

                    b.Navigation("KullaniciYemekleri");

                    b.Navigation("SaglikBilgisi");

                    b.Navigation("suIcmeBilgisi");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Ogun", b =>
                {
                    b.Navigation("KullaniciYemekleri");
                });

            modelBuilder.Entity("GlikoLog.DAL.Entities.Yemek", b =>
                {
                    b.Navigation("KullaniciYemekleri");
                });
#pragma warning restore 612, 618
        }
    }
}
